@Library('jenkins-upstream-library') _

pipeline {
    agent {
        docker {
            image 'quay.io/powercloud/inbound-agent:4.10-3.2'
            args '-v /etc/resolv.conf:/etc/resolv.conf'
            label 'jump-vpc-x86_64'
        }
    }
    environment {
        //users and credentials. All must be defined in Jenkins Credentials
        GITHUB_USER = credentials('GITHUB_USER')
        IBMCLOUD_API_KEY = credentials('IBM_PCLOUD_QE_API_KEY')
        GITHUB_TOKEN = credentials('GITHUB_TOKEN')
        REDHAT_USERNAME = credentials('REDHAT_USERNAME')
        REDHAT_PASSWORD = credentials('REDHAT_PASSWORD')
        PULL_SECRET = credentials('PULL_SECRET')

        IBM_CLOUD_REGION = "tor"
        IBM_CLOUD_ZONE = "tor01"
        SERVICE_INSTANCE_ID = "54903e51-c4d2-42be-bfa1-d31c708ddf31"
	 }

    stages {
        stage('Clone ansible extra') {
            steps {
                cloneRepo("https://github.com/pravin-dsilva/ocp4-playbooks-extras-1", "ocp4-playbooks-extras", "*/hypershift-jenkins")
            }
        }
        stage('Setup Common Environment Variables') {
            steps {
                setupCommonEnvironmentVariables()
                setupClusterConfig("${CONFIG_TYPE}")
            }
        }

        stage('Initialize Environment') {
            steps {
                initializeEnvironment()
            }
        }

        stage('Install Hypershift') {
            steps {
                deployAndDestroyHypershift()
            }
        }
    }
    
    post {
        always {
            archiveAllArtifacts("deploy/conformance-parallel-out.txt.tar.gz", "deploy/summary.txt", "deploy/vars.tfvars",
                "cpu-pre.pprof", "heap-pre.pprof", "prometheus.tar.gz", "deploy/cron.log", "must-gather.tar.gz", "deploy/logs.tar.gz",
                "deploy/successful_tests_cni_ovn_validation.txt", "deploy/failed_tests_cni_ovn_validation.txt")
            cleanWs()
        }
    }
}
